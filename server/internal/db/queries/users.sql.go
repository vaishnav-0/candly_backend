// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.17.2
// source: users.sql

package queries

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const getUser = `-- name: GetUser :one
SELECT id, phone, email, name FROM users WHERE id=$1
`

func (q *Queries) GetUser(ctx context.Context, id int64) (User, error) {
	row := q.db.QueryRow(ctx, getUser, id)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Phone,
		&i.Email,
		&i.Name,
	)
	return i, err
}

const getUserFromPhone = `-- name: GetUserFromPhone :one
SELECT id, phone, email, name FROM users WHERE phone=$1
`

func (q *Queries) GetUserFromPhone(ctx context.Context, phone string) (User, error) {
	row := q.db.QueryRow(ctx, getUserFromPhone, phone)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Phone,
		&i.Email,
		&i.Name,
	)
	return i, err
}

const insertUser = `-- name: InsertUser :exec
INSERT INTO users(name, phone, email)
VALUES ($1, $2, $3)
`

type InsertUserParams struct {
	Name  pgtype.Text
	Phone string
	Email pgtype.Text
}

func (q *Queries) InsertUser(ctx context.Context, arg InsertUserParams) error {
	_, err := q.db.Exec(ctx, insertUser, arg.Name, arg.Phone, arg.Email)
	return err
}
